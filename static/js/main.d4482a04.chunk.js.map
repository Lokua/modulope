{"version":3,"sources":["util.js","store.js","styles.js","ui/Button.js","ui/NumberBox.js","ui/Field.js","Transport/styled.js","Transport/Transport.js","Transport/index.js","Effects/styled.js","Effects/Effects.js","Effects/index.js","Synth/styled.js","Synth/Synth.js","Synth/index.js","App/styled.js","App/App.js","App/index.js","index.js"],"names":["round","NumberBox","roundToDecimal","store","createStore","playing","index","deviceCount","bpm","preAmp","Tone","Volume","theme","color","primary","background","inputBackground","panelBackground","colors","red","orange","yellow","green","blue","purple","pink","styledAx","injectGlobal","_templateObject","kindOr","or","fn","arguments","length","undefined","identity","p","ax","kind","styled","button","Button_templateObject","darken","values","getColor","isNil","colorIndex","_ref","Object","objectWithoutProperties","react_default","a","createElement","es","NumberBox_templateObject","floatProps","min","max","step","decimals","div","Field_templateObject","Container","styled_templateObject","LED","_templateObject2","on","Transport","toggleTransport","toggle","setBpm","value","scheduleRepeat","time","emit","Button","onClick","this","Field","ui_NumberBox","onChange","Component","view","Effects_styled_templateObject","Effect","styled_templateObject2","Effects","reverb","Freeverb","delay","FeedbackDelay","wet","connectSeries","globalStore","Master","_this2","styled_Container","assign","delayTime","feedback","ftom","dampening","mtof","roomSize","Synth_styled_templateObject","active","rgba","alpha","Synth","hasError","oscillator","Oscillator","amplitudeEnvelope","AmplitudeEnvelope","attack","decay","sustain","release","volume","Infinity","mod","randomInt","pitch","instanceCount","onTransportStart","_this","state","start","onTransportStop","stop","onBang","isActive","triggerAttackRelease","frequency","loop","off","dispose","Synth_styled_Container","dbToGain","gainToDb","React","App_styled_templateObject","Header","header","App_styled_templateObject2","Main","main","_templateObject3","Section","section","_templateObject4","Footer","footer","_templateObject5","StartAudioContext","context","App","App_styled_Container","onTouchMove","e","preventDefault","src_Transport","style","marginLeft","src_Effects","n","x","Array","fill","map","_","mapTimes","src_Synth","key","href","alt","target","rel","ReactDOM","render","styled_components_browser_es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d4482a04.chunk.js","sourcesContent":["import randomInt from 'random-int'\nimport NumberBox from '@lokua/number-box'\n\nexport const round = NumberBox.roundToDecimal\n\nexport function mapTimes(n, fn = x => x) {\n  return Array(n)\n    .fill(null)\n    .map((_, index) => fn(index))\n}\n\nexport function randomShort() {\n  return randomInt(0, 255)\n}\n","import { store as createStore } from 'react-easy-state'\nimport Tone from 'tone'\n\nconst store = createStore({\n  playing: false,\n  index: -1,\n  deviceCount: 1,\n  bpm: 127,\n  preAmp: new Tone.Volume()\n})\n\nexport default store\n","import { injectGlobal } from 'styled-components'\nimport styledAx from 'styled-ax'\n\nexport const theme = {\n  color: {\n    primary: 'dodgerblue',\n    background: '#222',\n    color: '#eee',\n    inputBackground: '#555',\n    panelBackground: '#333',\n    colors: {\n      red: 'red',\n      orange: 'orange',\n      yellow: 'yellow',\n      green: 'green',\n      blue: 'blue',\n      purple: 'purple',\n      pink: 'pink'\n    }\n  }\n}\n\nexport default styledAx(theme)\n\ninjectGlobal`\n  *,\n  *:before,\n  *:after {\n    font-family: monospace;\n  }\n\n  html {\n    height: 100%;\n    font-size: 10px;\n  }\n\n  body {\n    overflow: hidden;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    font-size: 14px;\n  }\n\n  #root {\n    overflow: hidden;\n    height: 100%;\n  }\n\n  a:link, a:visited, a:hover {\n    color: ${theme.color.inputBackground};\n  }\n\n  hr {\n    background-color: none;\n    border-bottom: 1px solid ${theme.color.panelBackground};\n  }\n`\n","import styled from 'styled-components'\nimport { darken } from 'polished'\nimport { identity } from 'ramda'\nimport ax from '../styles'\n\nconst kindOr = (or, fn = identity) => p => ax.color(p.kind || or)(fn)(p)\n\nexport default styled.button`\n  align-self: center;\n  min-width: 4rem;\n  padding: 0.5rem 1rem;\n  border: 1px solid ${kindOr('color')};\n  border-radius: 2px;\n  color: ${ax.color('color')};\n  background-color: ${kindOr('background', darken(0.1))};\n  font-family: monospace;\n  font-size: 1em;\n  font-weight: bold;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${kindOr('background', darken(0.2))};\n  }\n\n  &:not(:last-child) {\n    margin-right: 1rem;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport BaseNumberBox from '@lokua/number-box'\nimport { isNil, values } from 'ramda'\nimport ax, { theme } from '../styles'\n\nconst colors = values(theme.color.colors)\n\nfunction getColor(p) {\n  if (p.color) {\n    return ax.color(p.color)(p)\n  }\n\n  if (!isNil(p.colorIndex)) {\n    return colors[p.colorIndex % colors.length]\n  }\n\n  return ax.color('inputBackground')(p)\n}\n\nconst NumberBox = styled(({ color, colorIndex, ...p }) => (\n  <BaseNumberBox {...p} />\n))`\n  width: 6rem;\n  padding: 0.5rem 1rem;\n  border: 2px solid ${getColor};\n  border-radius: 2px;\n  color: ${ax.color('color')};\n  background-color: ${getColor};\n  font-family: monospace;\n  font-size: 1em;\n  text-align: center;\n  cursor: ns-resize;\n\n  &::selection {\n    background-color: transparent;\n  }\n\n  &:focus {\n    outline: 0;\n  }\n`\n\nNumberBox.floatProps = {\n  min: 0,\n  max: 1,\n  step: 0.01,\n  decimals: 2\n}\n\nexport default NumberBox\n","import styled from 'styled-components'\n\nexport default styled.div`\n  display: flex;\n  flex-direction: column;\n\n  label {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 0.5rem;\n    font-size: 0.8em;\n    text-align: center;\n  }\n\n  &:not(:last-child) {\n    margin-right: 0.5rem;\n  }\n`\n","import styled from 'styled-components'\nimport ax from '../styles'\nimport store from '../store'\n\nexport const Container = styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n`\n\nexport const LED = styled.div`\n  display: inline-block;\n  width: 1rem;\n  height: 1rem;\n  margin-left: 0.5rem;\n  border-radius: 50%;\n  border: 1px solid ${ax.color('panelBackground')};\n  background-color: ${p => (p.on ? ax.color('primary')(p) : 'transparent')};\n  transition: background-color ${60000 / store.bpm / 4}ms;\n`\n","import React, { Component } from 'react'\nimport { view } from 'react-easy-state'\nimport Tone from 'tone'\n\nimport store from '../store'\nimport Button from '../ui/Button'\nimport NumberBox from '../ui/NumberBox'\nimport Field from '../ui/Field'\nimport { Container, LED } from './styled'\n\nclass Transport extends Component {\n  componentDidMount() {\n    Tone.Transport.bpm.value = store.bpm\n\n    Tone.Transport.scheduleRepeat(time => {\n      store.index++\n      Tone.Transport.emit('bang', time, store.index)\n    }, '16n')\n  }\n\n  toggleTransport = () => {\n    Tone.Transport.toggle()\n    store.playing = !store.playing\n    store.index = -1\n  }\n\n  setBpm = value => {\n    Tone.Transport.bpm.value = store.bpm = value\n  }\n\n  render() {\n    return (\n      <Container>\n        <Button onClick={this.toggleTransport}>\n          {store.playing ? 'stop' : 'start'}\n        </Button>\n        <Field>\n          <label>\n            BPM <LED on={store.index % 4 === 0} />\n          </label>\n          <NumberBox\n            min=\"1\"\n            max=\"999\"\n            step=\"1\"\n            value={store.bpm}\n            onChange={this.setBpm}\n          />\n        </Field>\n      </Container>\n    )\n  }\n}\n\nexport default view(Transport)\n","import Transport from './Transport'\n\nexport default Transport\n","import styled from 'styled-components'\n\nimport ax from '../styles'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`\n\nexport const Effect = styled.div`\n  margin: 1rem;\n  padding: 1rem 2rem 2rem;\n  border-radius: 2px;\n  background-color: ${ax.color('panelBackground')};\n  transition: background-color 118ms;\n\n  > header {\n    padding-bottom: 1rem;\n    text-align: center;\n  }\n\n  > main {\n    display: flex;\n  }\n`\n","import React, { Component } from 'react'\nimport Tone from 'tone'\nimport { store as createStore, view } from 'react-easy-state'\nimport { mtof, ftom } from '@lokua/midi-util'\n\nimport globalStore from '../store'\nimport NumberBox from '../ui/NumberBox'\nimport Field from '../ui/Field'\nimport { round } from '../util'\nimport { Container, Effect } from './styled'\n\nclass Effects extends Component {\n  store = createStore({\n    reverb: new Tone.Freeverb(),\n    delay: new Tone.FeedbackDelay()\n  })\n\n  componentWillMount() {\n    this.store.reverb.wet.value = 0.5\n    this.store.delay.wet.value = 0.5\n\n    Tone.connectSeries(\n      globalStore.preAmp,\n      this.store.reverb,\n      this.store.delay,\n      Tone.Master\n    )\n  }\n\n  render() {\n    return (\n      <Container>\n        <Effect>\n          <header>Delay</header>\n          <main>\n            <Field>\n              <label>Time</label>\n              <NumberBox\n                {...NumberBox.floatProps}\n                value={round(this.store.delay.delayTime.value, 2)}\n                onChange={value => {\n                  this.store.delay.delayTime.value = value\n                }}\n              />\n            </Field>\n            <Field>\n              <label>Feedback</label>\n              <NumberBox\n                {...NumberBox.floatProps}\n                value={round(this.store.delay.feedback.value, 2)}\n                onChange={value => {\n                  this.store.delay.feedback.value = value\n                }}\n              />\n            </Field>\n            <Field>\n              <label>Mix</label>\n              <NumberBox\n                {...NumberBox.floatProps}\n                value={round(this.store.delay.wet.value, 2)}\n                onChange={value => {\n                  this.store.delay.wet.value = value\n                }}\n              />\n            </Field>\n          </main>\n        </Effect>\n        <Effect>\n          <header>Reverb</header>\n          <main>\n            <Field>\n              <label>Dampening</label>\n              <NumberBox\n                value={ftom(this.store.reverb.dampening.value)}\n                onChange={value => {\n                  this.store.reverb.dampening.value = mtof(value)\n                }}\n              />\n            </Field>\n            <Field>\n              <label>Room Size</label>\n              <NumberBox\n                {...NumberBox.floatProps}\n                value={round(this.store.reverb.roomSize.value, 2)}\n                onChange={value => {\n                  this.store.reverb.roomSize.value = value\n                }}\n              />\n            </Field>\n            <Field>\n              <label>Mix</label>\n              <NumberBox\n                {...NumberBox.floatProps}\n                value={round(this.store.reverb.wet.value, 2)}\n                onChange={value => {\n                  this.store.reverb.wet.value = value\n                }}\n              />\n            </Field>\n          </main>\n        </Effect>\n      </Container>\n    )\n  }\n}\n\nexport default view(Effects)\n","import Effects from './Effects'\n\nexport default Effects\n","import styled from 'styled-components'\nimport { rgba } from 'polished'\nimport { isNil, values } from 'ramda'\n\nimport ax, { theme } from '../styles'\n\nconst colors = values(theme.color.colors)\n\nfunction getColor(p) {\n  if (p.active && !isNil(p.colorIndex)) {\n    const index = p.colorIndex % colors.length\n    return rgba(colors[index], p.alpha)\n  }\n\n  return ax.color('panelBackground')(p)\n}\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 1rem;\n  padding: 2rem;\n  border-radius: 2px;\n  background-color: ${getColor};\n  transition: background-color 118ms;\n`\n","import React from 'react'\nimport Tone from 'tone'\nimport { store as createStore, view } from 'react-easy-state'\nimport { mtof } from '@lokua/midi-util'\nimport randomInt from 'random-int'\nimport { values } from 'ramda'\n\nimport NumberBox from '../ui/NumberBox'\nimport Field from '../ui/Field'\nimport globalStore from '../store'\nimport { round } from '../util'\nimport { Container } from './styled'\nimport { LED } from '../Transport/styled'\n\nclass Synth extends React.Component {\n  static instanceCount = 0\n\n  store = createStore({\n    hasError: false,\n    oscillator: new Tone.Oscillator(),\n    amplitudeEnvelope: new Tone.AmplitudeEnvelope({\n      attack: 0.001,\n      decay: 0.01,\n      sustain: 0.5,\n      release: 0.5\n    }),\n    volume: new Tone.Volume(-Infinity),\n    mod: randomInt(1, 16),\n    pitch: randomInt(0, 127),\n    colorIndex: Synth.instanceCount\n  })\n\n  componentWillMount() {\n    Synth.instanceCount++\n    this.store.oscillator.frequency.value = mtof(this.store.pitch)\n\n    Tone.connectSeries(\n      this.store.oscillator,\n      this.store.amplitudeEnvelope,\n      this.store.volume,\n      globalStore.preAmp\n    )\n\n    Tone.Transport.on('start', this.onTransportStart)\n    Tone.Transport.on('stop', this.onTransportStop)\n    Tone.Transport.on('bang', this.onBang)\n  }\n\n  componentDidMount() {\n    if (globalStore.playing) {\n      this.onTransportStart()\n    }\n  }\n\n  componentWillUnmount() {\n    this.store.loop && this.store.loop.stop()\n    Tone.Transport.off('start', this.onTransportStart)\n    Tone.Transport.off('stop', this.onTransportStop)\n\n    values(value => {\n      value instanceof Tone && value.dispose && value.dispose()\n    }, this.store)\n  }\n\n  onTransportStart = () => {\n    if (this.store.oscillator.state === 'stopped') {\n      this.store.oscillator.start()\n    }\n  }\n\n  onTransportStop = () => {\n    this.store.oscillator.stop()\n  }\n\n  onBang = (time, index) => {\n    if (this.isActive()) {\n      this.store.amplitudeEnvelope.triggerAttackRelease('16n', time, 1)\n    }\n  }\n\n  isActive() {\n    return globalStore.index % this.store.mod === 0\n  }\n\n  render() {\n    if (this.store.hasError) {\n      return 'Error...'\n    }\n\n    return (\n      <Container>\n        <Field>\n          <label>Pitch</label>\n          <NumberBox\n            value={this.store.pitch}\n            onChange={value => {\n              this.store.pitch = value\n              this.store.oscillator.frequency.value = mtof(value)\n            }}\n          />\n        </Field>\n        <Field>\n          <label>\n            Mod <LED on={this.isActive()} />\n          </label>\n          <NumberBox\n            min={1}\n            max={16}\n            value={this.store.mod}\n            onChange={value => {\n              this.store.mod = value\n            }}\n          />\n        </Field>\n        {this.store.volume && (\n          <Field>\n            <label>Volume</label>\n            <NumberBox\n              {...NumberBox.floatProps}\n              value={round(Tone.dbToGain(this.store.volume.volume.value), 2)}\n              onChange={value => {\n                this.store.volume.volume.value = Tone.gainToDb(value)\n              }}\n            />\n          </Field>\n        )}\n      </Container>\n    )\n  }\n}\n\nexport default view(Synth)\n","import Synth from './Synth'\n\nexport default Synth\n","import styled from 'styled-components'\nimport ax from '../styles'\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-rows: min-content auto 100px;\n  overflow: auto;\n  height: 100%;\n  padding: 1rem;\n  color: ${ax.color('color')};\n  background-color: ${ax.color('background')};\n`\n\nexport const Header = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 2rem;\n  padding: 1rem;\n\n  > section {\n    display: flex;\n  }\n`\n\nexport const Main = styled.main`\n  display: flex;\n  flex-direction: column;\n\n  > div:not(:last-child) {\n    margin-right: 1rem;\n  }\n`\n\nexport const Section = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  &:last-child {\n    margin-bottom: 2rem;\n  }\n`\n\nexport const Footer = styled.footer`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n`\n","import React from 'react'\nimport { view } from 'react-easy-state'\nimport StartAudioContext from 'startaudiocontext'\nimport Tone from 'tone'\n\nimport { mapTimes } from '../util'\nimport store from '../store'\nimport Transport from '../Transport'\nimport Effects from '../Effects'\nimport Synth from '../Synth'\nimport Button from '../ui/Button'\nimport NumberBox from '../ui/NumberBox'\nimport Field from '../ui/Field'\nimport { round } from '../util'\nimport { Container, Header, Main, Section, Footer } from './styled'\n\nStartAudioContext(Tone.context)\n\nexport default view(() => (\n  <Container onTouchMove={e => e.preventDefault()}>\n    <Header>\n      <section>\n        <Transport />\n        <Field>\n          <label>Volume</label>\n          <NumberBox\n            {...NumberBox.floatProps}\n            style={{ marginLeft: '0.5rem' }}\n            value={round(Tone.dbToGain(store.preAmp.volume.value), 2)}\n            onChange={value => {\n              store.preAmp.volume.value = Tone.gainToDb(value)\n            }}\n          />\n        </Field>\n      </section>\n      <Effects />\n    </Header>\n    <Main>\n      <Section>\n        <Button onClick={() => store.deviceCount--}>-</Button>\n        <Button onClick={() => store.deviceCount++}>+</Button>\n      </Section>\n      <Section>\n        {mapTimes(store.deviceCount, index => <Synth key={index} />)}\n      </Section>\n    </Main>\n    <Footer>\n      <a\n        href=\"https://github.com/lokua/modulope.git\"\n        alt=\"source code\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        https://github.com/lokua/modulope.git\n      </a>\n    </Footer>\n  </Container>\n))\n","import App from './App'\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'styled-components'\n\nimport App from './App'\nimport { theme } from './styles'\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}